apiVersion: cluster.x-k8s.io/v1beta1
kind: Cluster
metadata:
  labels:
    cluster.x-k8s.io/cluster-name: {{.clusterName}}
  name: {{.clusterName}}
  namespace: {{.eksaSystemNamespace}}
spec:
  clusterNetwork:
    pods:
      cidrBlocks: {{.podCidrs}}
    services: 
      cidrBlocks: {{.serviceCidrs}}
  controlPlaneEndpoint:
    host: {{.controlPlaneEndpointIp}}
    port: 6443
  infrastructureRef:
    apiVersion: infrastructure.cluster.x-k8s.io/v1alpha1
    kind: MicrovmCluster
    name: {{.clusterName}}
  controlPlaneRef:
    kind: KubeadmControlPlane
    apiVersion: controlplane.cluster.x-k8s.io/v1beta1
    name: {{.clusterName}}
---
apiVersion: infrastructure.cluster.x-k8s.io/v1alpha1
kind: MicrovmCluster
metadata:
  name: {{.clusterName}}
  namespace: {{.eksaSystemNamespace}}
spec:
  controlPlaneEndpoint:
    host: {{.controlPlaneEndpointIp}}
    port: 6443
  placement:
    staticPool:
      hosts:
      - endpoint: {{.flintlockurl}}
        controlplaneAllowed: true
{{- if (ne .clusterSSHKey "") }}
  sshPublicKey: {{ .clusterSSHKey }}
{{- end }}
{{- if (ne .microvmProxy "") }}
  microvmProxy:
    endpoint:  {{ .microvmProxy }}
{{- end }}
---
kind: KubeadmControlPlane
apiVersion: controlplane.cluster.x-k8s.io/v1beta1
metadata:
  name: {{.clusterName}}
  namespace: {{.eksaSystemNamespace}}
spec:
  replicas: {{.controlPlaneReplicas}}
  version: {{.kubernetesVersion}}
  machineTemplate:
    infrastructureRef:
      kind: MicrovmMachineTemplate
      apiVersion: infrastructure.cluster.x-k8s.io/v1alpha1
      name: {{.controlPlaneTemplateName}}
  kubeadmConfigSpec:
    initConfiguration:
      nodeRegistration:
        criSocket: /run/containerd/containerd.sock
        kubeletExtraArgs:
          provider-id: "microvm://{{`{{ ds.meta_data.instance_id }}`}}"
    clusterConfiguration:
      imageRepository: {{.kubernetesRepository}}
      etcd:
        local:
          imageRepository: {{.etcdRepository}}
          imageTag: {{.etcdImageTag}}
      dns:
        imageRepository: {{.corednsRepository}}
        imageTag: {{.corednsVersion}}
    joinConfiguration:
      nodeRegistration:
        criSocket: /run/containerd/containerd.sock
        kubeletExtraArgs:
          provider-id: "microvm://{{`{{ ds.meta_data.instance_id }}`}}"
        ignorePreflightErrors:
         - DirAvailable--etc-kubernetes-manifests
    preKubeadmCommands:
    - mkdir -p /etc/kubernetes/manifests && ctr images pull {{.kubeVipImage}} && ctr run --rm --net-host {{.kubeVipImage}} vip /kube-vip manifest pod --arp --interface $(ip -4 -j route list default | jq -r .[0].dev) --address {{.controlPlaneEndpointIp}} --controlplane --leaderElection > /etc/kubernetes/manifests/kube-vip.yaml
#    users:
#    - name: {{.controlPlaneSshUsername}}
#      sshAuthorizedKeys:
#      - '{{.controlPlaneSshAuthorizedKey}}'
#      sudo: ALL=(ALL) NOPASSWD:ALL
    format: {{.format}}
---
kind: MicrovmMachineTemplate
apiVersion: infrastructure.cluster.x-k8s.io/v1alpha1
metadata:
  name: {{.controlPlaneTemplateName}}
  namespace: {{.eksaSystemNamespace}}
spec:
  template:
    spec:
      vcpu: 2
      memoryMb: 2048
      rootVolume:
        id: root
        image: ghcr.io/richardcase/capmvm-kubernetes:v1.20.11-eks-1-20-10
        mountPoint: "/"
      kernel:
        filename: "boot/vmlinux"
        image: docker.io/richardcase/flintlock-kernel:5.10.77
      kernelCmdline: {}
      networkInterfaces:
      - guestDeviceName: "eth1"
        type: "macvtap"